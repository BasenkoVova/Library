<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">



    <jdbc:initialize-database data-source="dataSource" enabled="true">
        <jdbc:script location="classpath:dataBase/initDB.sql"/>
        <jdbc:script encoding="utf-8" location="classpath:dataBase/populateDB.sql"/>
    </jdbc:initialize-database>


    <tx:annotation-driven/>
<!--    <tx:annotation-driven proxy-target-class="true"-->
<!--                          transaction-manager="transactionManager" />-->

    <!--    <context:property-placeholder location="classpath:postgres.properties" system-properties-mode="OVERRIDE"/>-->


    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/library"/>
        <property name="username" value="user"/>
        <property name="password" value="password"/>

    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="library.**.model">
        <!--        p:persistenceUnitName="persistenceUnit">-->

        <property name="jpaPropertyMap">
            <map>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="true"/>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="true"/>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).JPA_PROXY_COMPLIANCE}" value="false"/>
                <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="true"/>
<!--                <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="drop-and-create"/>-->
            </map>
        </property>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true">
            </bean>
        </property>
    </bean>








    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <beans>
        <context:component-scan base-package="**.repository.datajpa"/>
        <jpa:repositories base-package="library.**.repository.datajpa"/>
    </beans>



























<!--    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">-->
<!--        <jdbc:script location="classpath:db/${jdbc.initLocation}"/>-->
<!--        <jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>-->
<!--    </jdbc:initialize-database>-->

<!--    &lt;!&ndash; Choose profile from (hsqldb/ postgres) and (jdbc/ datajpa/ jpa) &ndash;&gt;-->


<!--    &lt;!&ndash; Enable Annotation based Declarative Transaction Management &ndash;&gt;-->
<!--    &lt;!&ndash;    <tx:annotation-driven/>   &ndash;&gt;-->
<!--    <tx:annotation-driven proxy-target-class="true"-->
<!--                          transaction-manager="transactionManager" />-->


<!--    <beans profile="postgres">-->
<!--        &lt;!&ndash;-->
<!--            For postgres driver logging-->
<!--            It uses java.util.logging and logged via jul-to-slf4j bridge-->
<!--            https://stackoverflow.com/a/27296470/548473-->
<!--        &ndash;&gt;-->
<!--        <bean class="org.springframework.beans.factory.config.MethodInvokingBean">-->
<!--            <property name="staticMethod" value="org.slf4j.bridge.SLF4JBridgeHandler.install" />-->
<!--        </bean>-->

<!--        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>-->

<!--        <bean id="dataSource"-->
<!--              class="org.apache.tomcat.jdbc.pool.DataSource"-->
<!--              p:driverClassName="org.postgresql.Driver"-->
<!--              p:url="${database.url}"-->
<!--              p:username="${database.username}"-->
<!--              p:password="${database.password}"/>-->
<!--    </beans>-->

<!--    <beans profile="tomcat">-->
<!--        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/library"/>-->
<!--        <context:property-placeholder location="classpath:db/tomcat.properties" system-properties-mode="OVERRIDE"/>-->
<!--    </beans>-->

<!--    <beans profile="jdbc">-->
<!--        <context:component-scan base-package="ru.javawebinar.**.repository.jdbc"/>-->
<!--        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
<!--            <constructor-arg ref="dataSource"/>-->
<!--        </bean>-->

<!--        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
<!--            <constructor-arg ref="jdbcTemplate"/>-->
<!--        </bean>-->

<!--        <bean id="transactionManager"-->
<!--              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--            <property name="dataSource" ref="dataSource" />-->
<!--        </bean>-->


<!--    </beans>-->

<!--    <beans profile="jpa,datajpa">-->
<!--        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"-->
<!--              p:dataSource-ref="dataSource"-->
<!--              p:packagesToScan="ru.javawebinar.**.model">-->
<!--            &lt;!&ndash;p:persistenceUnitName="persistenceUnit">&ndash;&gt;-->

<!--            <property name="jpaPropertyMap">-->
<!--                <map>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).JPA_PROXY_COMPLIANCE}" value="false"/>-->
<!--                    &lt;!&ndash;<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>&ndash;&gt;-->

<!--                    &lt;!&ndash;https://github.com/hibernate/hibernate-orm/blob/master/documentation/src/main/asciidoc/userguide/chapters/caching/Caching.adoc#caching-provider-jcache&ndash;&gt;-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}" value="org.hibernate.cache.jcache.internal.JCacheRegionFactory"/>-->
<!--                    <entry key="#{T(org.hibernate.cache.jcache.ConfigSettings).PROVIDER}" value="org.ehcache.jsr107.EhcacheCachingProvider"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="false"/> &lt;!&ndash;default&ndash;&gt;-->
<!--&lt;!&ndash;-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_ACTION}" value="drop-and-create"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_CREATE_TARGET}" value="${TOPJAVA_ROOT}/config/ddl/create.ddl"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_DROP_TARGET}" value="${TOPJAVA_ROOT}/config/ddl/drop.ddl"/>-->
<!--                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="create"/>-->
<!--&ndash;&gt;-->
<!--                </map>-->
<!--            </property>-->

<!--            <property name="jpaVendorAdapter">-->
<!--                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="${jpa.showSql}">-->
<!--                </bean>-->
<!--            </property>-->
<!--        </bean>-->

<!--        <tx:annotation-driven/>-->

<!--        &lt;!&ndash; Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) &ndash;&gt;-->
<!--        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"-->
<!--              p:entityManagerFactory-ref="entityManagerFactory"/>-->

<!--&lt;!&ndash;        <bean class="ru.javawebinar.library.repository.JpaUtil"/>&ndash;&gt;-->
<!--    </beans>-->

<!--    <beans profile="jpa">-->
<!--        <context:component-scan base-package="ru.javawebinar.**.repository.jpa"/>-->
<!--    </beans>-->

<!--    <beans profile="datajpa">-->
<!--        <context:component-scan base-package="ru.javawebinar.**.repository.datajpa"/>-->
<!--        <jpa:repositories base-package="ru.javawebinar.**.repository.datajpa"/>-->
<!--    </beans>-->
</beans>